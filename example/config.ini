; HTTP server configuration
[server]
; (required) Host with TLD for this instance (basically, the fully qualified domain or subdomain); ignored in debug mode
sr_host                           = d72d-31-223-51-97.ngrok.io
; (default: 443) Port to serve HTTPS requests on
sr_https_port                     = 443
; (required) Path to the certificate file used to establish TLS connections for HTTPS
sr_cert_file                      = localhost.crt
; (required) Path to the private key file used to establish TLS connections for HTTPS
sr_key_file                       = localhost.decrypted.key
; (required) Path to private key file used for cookie authentication
sr_cookie_auth_key_file           = cookie_authn.key
; Path to private key file used for cookie encryption
sr_cookie_encryption_key_file     = cookie_enc.key
; (default: 86400 seconds) Number of seconds a cookie is valid; 0 indicates no Max-Age (browser-dependent, usually session-only); negative value is invalid
sr_cookie_max_age                 = 86400
; (required) Cookie session name to use for the application
sr_cookie_session_name            = my_apcore_session_name
; Timeout in seconds for incoming HTTPS requests; a zero or unset value does not timeout
sr_https_read_timeout_seconds     = 60
; Timeout in seconds for outgoing HTTPS responses; a zero or unset value does not timeout
sr_https_write_timeout_seconds    = 60
; Timeout in seconds for outgoing HTTP requests; a zero or unset value does not timeout
sr_http_client_timeout_seconds    = 0
; Timeout in seconds for incoming HTTP requests, which will be redirected to HTTPS; a zero or unset value does not timeout
sr_redirect_read_timeout_seconds  = 60
; Timeout in seconds for outgoing HTTP redirect-to-HTTPS responses; a zero or unset value does not timeout
sr_redirect_write_timeout_seconds = 60
; (required) Root directory for serving static content, such as ECMAScript, CSS, favicon; !!!Warning: Everything in this directory will be served and accessible!!!
sr_static_root_directory          = static
; (default: 32) The size of salts to use with passwords when hashing, anything smaller than 16 will be treated as 16
sr_salt_size                      = 32
; (default: 10) The hashing cost to use with the bcrypt hashing algorithm, between 4 and 31; the higher the cost, the slower the hash comparisons for passwords will take for attackers and regular users alike
sr_bcrypt_strength                = 10
; (default: 1024) The size of the RSA private key for a user; values less than 1024 are forbidden
sr_rsa_private_key_size           = 2048

; OAuth 2 configuration
[oauth]
; (default: 3600 seconds) Duration in seconds until an access token expires; zero or negative values are invalid.
oauth_access_token_expiry  = 3600
; (default: 7200 seconds) Duration in seconds until a refresh token expires; zero or negative values are invalid.
oauth_refresh_token_expiry = 7200

; Database configuration
[database]
; (required) Only "postgres" supported
db_database_kind                = postgres
; (default: indefinite) Maximum lifetime of a connection in seconds; a value of zero or unset value means indefinite
db_conn_max_lifetime_seconds    = 60
; (default: infinite) Maximum number of open connections to the database; a value of zero or unset value means infinite
db_max_open_conns               = 0
; (default: 2) Maximum number of idle connections in the connection pool to the database; a value of zero maintains no idle connections; a value greater than max_open_conns is reduced to be equal to max_open_conns
db_max_idle_conns               = 2
; (default: 10) The default collection page size when fetching a page of an ActivityStreams collection
db_default_collection_page_size = 10
; (default: 200) The maximum collection page size allowed when fetching a page of an ActivityStreams collection
db_max_collection_page_size     = 200

; Only needed if database_kind is postgres, and values are based on the github.com/jackc/pgx driver
[db_postgres]
; (required) Database name
pg_db_name                   = pgdb
; (required) User to connect as (any password will be prompted)
pg_user                      = rubyuser
; (default: localhost) The Postgres host to connect to
pg_host                      = localhost
; (default: 5432) The port to connect to
pg_port                      = 5432
; The database password to use to connect
password                     = asdasd
; (default: require) SSL mode to use when connecting (options are: "disable", "require", "verify-ca", "verify-full")
pg_ssl_mode                  = disable
; An application_name to fall back to if one is not provided
pg_fallback_application_name =
; (default: indefinite) Maximum wait when connecting to a database, zero or unset means indefinite
pg_connect_timeout           = 0
; PEM-encoded certificate file location
pg_ssl_cert                  =
; PEM-encoded private key file location
pg_ssl_key                   =
; PEM-encoded root certificate file location
pg_ssl_root_cert             =
; Postgres schema prefix to use
pg_schema                    =

; ActivityPub configuration
[activitypub]
; (default: UTC) Timezone for ActivityPub related operations: unset and "UTC" are UTC, "Local" is local server time, otherwise use IANA Time Zone database values
ap_clock_timezone                           = UTC
; (default: 2) Per-host outbound rate limit for delivery of federated messages under steady state conditions; a negative value or value of zero is invalid
ap_outbound_rate_limit_qps                  = 2
; (default: 5) Per-host outbound burst tolerance for delivery of federated messages; a negative value or value of zero is invalid
ap_outbound_rate_limit_burst                = 5
; (default: 60) The time period to await before periodically removing cached per-host rate-limiters that are no longer in use, controlling how frequently pruning occurs; a negative value or value of zero is invalid
ap_outbound_rate_limit_prune_period_seconds = 60
; (default: 30) The age of an unused per-host rate-limiter must be to be pruned and removed from the cache when the pruning occurs, controlling how long cached rate-limiters are kept when unused; a negative value is invalid
ap_outbound_rate_limit_prune_age_seconds    = 30
; (default: 50) The maximum recursion depth to use when determining whether to do inbox forwarding, which if triggered ensures older thread participants are able to receive messages; zero means no limit (only used if the application has S2S enabled); a negative value is invalid
ap_max_inbox_forwarding_recursion_depth     = 50
; (default: 50) The maximum depth to search for peers to deliver due to inbox forwarding, which ensures messages received by this server are propagated to them and no "ghost reply" problems occur; zero means no limit (only used if the application has S2S enabled); a negative value is invalid
ap_max_delivery_recursion_depth             = 50
; (default: 25) The number of retryable deliveries to request from the database at a time; a negative value or zero value is invalid
ap_retry_page_size                          = 25
; (default: 10) The maximum number of times the app will attempt to deliver an Activity to a federated peer and fail before permanently giving up and abandoning any further attempts to deliver it; a negative value or zero value is invalid
ap_retry_abandon_limit                      = 10
; (default: 300) The time period to await between making periodic attempts to re-deliver Activities to federated peers that have never been successfully delivered; a 300-second retry sleep period with an abandon limit of 10 results in an exponential backoff of 10 delivery attempts across roughly 3 days; a negative value or zero value is invalid
ap_retry_sleep_period_seconds               = 300

; HTTP Signatures configuration
[ap_http_signatures]
; (default: "rsa-sha256,rsa-sha512") Comma-separated list of algorithms used by the go-fed/httpsig library to sign outgoing HTTP signatures; the first algorithm in this list will be the one used to verify other peers' HTTP signatures
http_sig_algorithms       = rsa-sha256,rsa-sha512
; (default: "SHA-256") RFC 3230 algorithm for use in signing header Digests
http_sig_digest_algorithm = SHA-256
; (default: "(request-target),Date") Comma-separated list of HTTP headers to sign in GET requests; must contain "(request-target)" and "Date"
http_sig_get_headers      = (request-target),Date
; (default: "(request-target),Date,Digest") Comma-separated list of HTTP headers to sign in POST requests; must contain "(request-target)", "Date", and "Digest"
http_sig_post_headers     = (request-target),Date,Digest

; NodeInfo configuration
[nodeinfo]
; (default: true) Whether to share basic server and software information at a somewhat-Fediverse-understood endpoint for public use; NodeInfo is upstream of the NodeInfo2 fork and in general admins will either wish to enable or disable both
ni_enable_nodeinfo                      = true
; (default: true) Whether to share basic server, organization, and software information at a somewhat-Fediverse-understood endpoint for public use; NodeInfo2 is a fork of NodeInfo and in general admins will either wish to enable or disable both
ni_enable_nodeinfo2                     = true
; (default: true) Whether to share anonymized statistics about user counts, counts of user activity over various periods of time, local post counts, and local comment counts to the public; for sufficiently small instances the statistics are always shared with noise introduced; if none of the NodeInfos are enabled then this option does nothing
ni_enable_anon_stats_sharing            = true
; (default: 86400) The number of seconds before the anonymized node statistics are refreshed and updated; in the meantime the existing values will be cached and served for this period of time
ni_anon_stats_cache_invalidated_seconds = 86400
